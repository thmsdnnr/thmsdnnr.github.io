<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>treeTraversal on full-stack overflow</title>
		<link>https://thmsdnnr.com/tags/treetraversal/</link>
		<description>Recent content in treeTraversal on thmsdnnr.com</description>
		<generator>Hugo -- gohugo.io</generator>
		<language>en-us</language>
		<copyright>Â© 2017-2020 thomas danner // Vitae theme for Hugo</copyright>
		<lastBuildDate>Fri, 02 Feb 2018 06:56:04 +0000</lastBuildDate>
		
		<atom:link href="https://thmsdnnr.com/tags/treetraversal/index.xml" rel="self" type="application/rss+xml" />
		
		<item>
			<title>Binary Search Trees: Handling Deletion</title>
			<link>https://thmsdnnr.com/blog/binary-search-trees-handling-deletion/</link>
			<pubDate>Fri, 02 Feb 2018 06:56:04 +0000</pubDate>
			
			<guid>https://thmsdnnr.com/blog/binary-search-trees-handling-deletion/</guid>
			<description>
				
				Handling deletion in Binary Search Trees for nodes with zero, one, and two children.
				
			</description>
		</item>
		<item>
			<title>Intro to Binary Search Trees</title>
			<link>https://thmsdnnr.com/blog/intro-to-binary-search-trees/</link>
			<pubDate>Thu, 01 Feb 2018 06:56:04 +0000</pubDate>
			
			<guid>https://thmsdnnr.com/blog/intro-to-binary-search-trees/</guid>
			<description>
				
				Binary Search Trees are are a data structure allowing O(log(N)) lookup of entries. We implement insertion, traversal, and search methods for Binary Search Trees.
				
			</description>
		</item>
		
	</channel>
</rss>
